export interface TokenBalance {
  address: string;
  balance: number;
}

export interface TokenTransaction {
  from_address: string;
  to_address: string;
  amount: number;
  timestamp: string;
  transaction_type: 'mint' | 'transfer' | 'burn';
}

export interface GitHubRepo {
  name: string;
  full_name: string;
  description?: string;
  html_url: string;
  stargazers_count: number;
  forks_count: number;
  open_issues_count: number;
  updated_at: string;
}

export interface GitHubCommit {
  sha: string;
  message: string;
  author: string;
  date: string;
  url: string;
}

export interface ProjectMetrics {
  project_id: number;
  total_funding: number;
  total_backers: number;
  avg_contribution: number;
  funding_rate: number;
  milestone_completion_rate: number;
  community_engagement: number;
}

export interface TimeSeriesMetric {
  timestamp: string;
  value: number;
}

export interface Project {
  id: number;
  name: string;
  description: string;
  fundingGoal: number;
  currentFunding: number;
  backers: number;
  daysLeft: number;
  creator: string;
  creatorProfile?: string;
  website?: string;
  githubRepo?: string;
  image: string;
  updates: ProjectUpdate[];
  milestones: ProjectMilestone[];
  votes?: number;
  metrics?: ProjectMetrics;
  status?: 'active' | 'completed' | 'failed';
  created_at?: string;
}

export interface ProjectUpdate {
  date: string;
  title: string;
  content: string;
}

export interface ProjectMilestone {
  title: string;
  status: 'completed' | 'in-progress' | 'pending';
  target: string;
}

export interface ProjectFeedback {
  innovation_rating: string;
  backing_intention: string;
  suggestions: string;
  risks: string;
}

export interface Vote {
  projectId: number;
  voter: string;
  vote: number;
  timestamp: number;
}
